{"ast":null,"code":"var _jsxFileName = \"/Users/glenn/Desktop/2020/info30005/info30005-pear-frontend/src/pages/Support.js\";\nimport React from \"react\";\nimport Slider from \"react-animated-slider\"; //A React component for presentation slide page\n\nimport \"react-animated-slider/build/horizontal.css\";\nimport \"../css/supportStyles.css\";\nimport { useSupports } from \"../api.js\";\nimport { NavLink } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\"; //A React component for a variety of URLs, including YouTube\n\nexport default function Support() {\n  const {\n    loading,\n    supports,\n    error\n  } = useSupports();\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, \"Something went wrong: \", error.message);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Add support content to each slider by index, connect ReactPlayer with video url\n    React.createElement(\"div\", {\n      className: \"support\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      className: \"slider-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, supports.map((support, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Content, Object.assign({\n      key: index\n    }, support, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(ReactPlayer, {\n      key: index,\n      id: \"video\",\n      url: support.video,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }))))), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/home\",\n      className: \"btn-support\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, \"Get Started\"))\n  );\n} // Fetches support content title and body from MongoDB\n\nfunction Content(support) {\n  const {\n    title,\n    body,\n    video\n  } = support;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, body));\n}","map":{"version":3,"sources":["/Users/glenn/Desktop/2020/info30005/info30005-pear-frontend/src/pages/Support.js"],"names":["React","Slider","useSupports","NavLink","ReactPlayer","Support","loading","supports","error","message","map","support","index","video","Content","title","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CAA4C;;AAC5C,OAAO,4CAAP;AACA,OAAO,0BAAP;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AAExC,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA+BN,WAAW,EAAhD;;AACA,MAAII,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAIE,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA0BA,KAAK,CAACC,OAAhC,CAAP;AACD;;AAED;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACZ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA;AAAd,OAAyBD,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAEE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEC,KAAlB;AAAyB,MAAA,EAAE,EAAC,OAA5B;AAAoC,MAAA,GAAG,EAAED,OAAO,CAACE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADD,CADH,CADF,eAWE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF;AAFF;AAkBD,C,CAED;;AACA,SAASC,OAAT,CAAiBH,OAAjB,EAA0B;AACxB,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeH,IAAAA;AAAf,MAAyBF,OAA/B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAL,CAFF,CADF;AAMD","sourcesContent":["import React from \"react\";\nimport Slider from \"react-animated-slider\"; //A React component for presentation slide page\nimport \"react-animated-slider/build/horizontal.css\";\nimport \"../css/supportStyles.css\";\nimport { useSupports } from \"../api.js\";\nimport { NavLink } from \"react-router-dom\";\nimport ReactPlayer from \"react-player\"; //A React component for a variety of URLs, including YouTube\n\nexport default function Support() {\n  const { loading, supports, error } = useSupports();\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  if (error) {\n    return <p>Something went wrong: {error.message}</p>;\n  }\n\n  return (\n    // Add support content to each slider by index, connect ReactPlayer with video url\n    <div className=\"support\">\n      <Slider className=\"slider-wrapper\">\n        {supports.map((support, index) => (\n          <div className=\"slider-content\">\n            <div className=\"inner\">\n              <Content key={index} {...support} />\n              <ReactPlayer key={index} id=\"video\" url={support.video} />\n            </div>\n          </div>\n        ))}\n      </Slider>\n      <NavLink to=\"/home\" className=\"btn-support\">\n        Get Started\n      </NavLink>\n    </div>\n  );\n}\n\n// Fetches support content title and body from MongoDB\nfunction Content(support) {\n  const { title, body, video } = support;\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      <h3>{body}</h3>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}